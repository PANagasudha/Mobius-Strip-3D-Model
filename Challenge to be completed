Challenge to complete 3D mobius strip:
1. Understanding Parametric Equations
•	The Möbius strip is not a standard 3D shape.
•	It requires parametric equations to define its X, Y, Z coordinates based on two parameters u and v.
•	Understanding how u affects the twist and how v controls the width was crucial.

🧮 2. Generating the Mesh Grid
•	Using numpy.meshgrid(u, v) to create a 2D grid of points for the strip was tricky at first.
•	Ensuring correct bounds and resolution for u and v was necessary to form a smooth strip.

🧠 3. Visualizing the Twist
•	A Möbius strip has a half-twist, which can be hard to conceptualize in 3D.
•	Incorrect equations or mesh order caused incomplete or distorted strips.

📏 4. Calculating Surface Area
•	Surface area isn't calculated by a simple formula.
•	It had to be numerically approximated using the cross product of partial derivatives.
•	Understanding gradients and surface integrals was essential.

📐 5. Computing Edge Length
•	The Möbius strip has only one physical edge, but in code, you handle it as two (v = -w/2 and v = w/2).
•	Calculating arc length required taking differences between consecutive points in 3D space using np.diff.

🖼️ 6. 3D Plotting with Matplotlib
•	Working with Axes3D to render a smooth 3D surface required adjusting angles, lighting, and resolution.
•	Choosing the right colormap (cmap) and avoiding distortion in aspect ratio took experimentation.

💾 7. Exporting and Displaying Coordinates
•	Printing or saving (X, Y, Z) coordinates while keeping them structured and readable was challenging.
•	Had to handle large NumPy arrays efficiently.

